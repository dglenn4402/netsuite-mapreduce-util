name: create-release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: use node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: build client
        working-directory: client
        run: npm ci && npm run build

      - name: build sdf
        working-directory: sdf
        run: npm ci && npm run build

      - name: create zip file
        working-directory: sdf/dist
        run: zip -r ../../mapreduce-util.zip .

      # create a release message based on commit messages
      # idea based on https://github.com/ScottBrenner/generate-changelog-action but
      # using generate-changelog directly because the new version already has a tag
      # and so we need to search for and pass in the tag of the previous version

      - name: generate changelog
        id: generate_changelog
        run: |
          npm install -g generate-changelog
          TAG=`git tag --sort=-v:refname | sed -n 2p`
          echo "Generating changelog from tag $TAG"
          CHANGELOG=`changelog --tag $TAG --file -`
          echo "$CHANGELOG"
          # https://github.community/t/set-output-truncates-multiline-strings/16852/3
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$CHANGELOG"

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: ${{ steps.generate_changelog.outputs.changelog }}

      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mapreduce-util.zip
          asset_name: mapreduce-util.zip
          asset_content_type: application/zip
